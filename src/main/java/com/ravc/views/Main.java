/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ravc.views;

import br.com.swconsultoria.nfe.dom.Evento;
import br.com.swconsultoria.nfe.dom.enuns.ManifestacaoEnum;
import com.ravc.controllers.CertificadoConfig;
import com.ravc.controllers.ManifestarNfe;
import com.ravc.utils.FinalizarSistema;
import com.ravc.utils.Properties;
import com.ravc.utils.StatusProgress;
import com.ravc.utils.Tools;
import java.awt.Image;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.time.LocalDateTime;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import net.lingala.zip4j.ZipFile;
import org.apache.commons.lang.StringUtils;

/**
 *
 * @author Rodrigo
 */
public class Main extends javax.swing.JFrame {

    private static final Point point = new Point();
    private ManifestarNfe manifestarNfeController = new ManifestarNfe();

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();

        URL url = this.getClass().getResource("/images/icons8_desktop_30px.png");
        Image imagemTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(imagemTitulo);

        addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                point.x = e.getX();
                point.y = e.getY();
            }
        });
        addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                Point p = getLocation();
                setLocation(p.x + e.getX() - point.x, p.y + e.getY() - point.y);
            }
        });

        checkSchemasFolder();

        Properties properties = new Properties();
        jtfCNPJCPF.setText(properties.prop().getString("manifestaNfe.cnpjcpf", ""));
        jtfSenha.setText(properties.prop().getString("manifestaNfe.senhaCertificado", ""));
        jcbOperacao.setSelectedIndex(properties.prop().getInt("manifestaNfe.operacao", 0));
        jcbTipoCertificadoA3.setSelectedIndex(properties.prop().getInt("manifestaNfe.tipoCertificadoA3", 0));
        jcbUFEmitente.setSelectedIndex(properties.prop().getInt("manifestaNfe.estadoEmitente", 0));

        if (properties.prop().getString("manifestaNfe.tipoCertificado", "A1").equals("A1")) {
            jrbA1.setSelected(true);
        } else {
            jrbA3.setSelected(true);
        }

        jtfChaveAcesso.requestFocus();
    }

    private void checkSchemasFolder() {
        new Thread(() -> {
            InputStream schemas = getClass().getResourceAsStream("/schemas.zip");
            File schemasZip = new File(Tools.getProgramFiles() + File.separator + "schemas.zip");

            if (!(new File(Tools.getProgramFiles() + File.separator + "schemas")).exists()) {
                try {
                    copyInputStreamToFile(schemas, schemasZip);
                    ZipFile zip = new ZipFile(schemasZip);
                    zip.extractAll(Tools.getProgramFiles());
                    schemasZip.delete();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao copiar schemas, motivo:\n" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                }
            }
        }).start();
    }

    private static void copyInputStreamToFile(InputStream inputStream, File file)
            throws IOException {

        try (FileOutputStream outputStream = new FileOutputStream(file)) {

            int read;
            byte[] bytes = new byte[1024];

            while ((read = inputStream.read(bytes)) != -1) {
                outputStream.write(bytes, 0, read);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoCertificado = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCNPJCPF = new javax.swing.JTextField();
        jtfChaveAcesso = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbOperacao = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jrbA3 = new javax.swing.JRadioButton();
        jrbA1 = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jtfSenha = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jcbTipoCertificadoA3 = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        jcbUFEmitente = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jbFecharSistema = new javax.swing.JButton();
        jbEnviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manifestar Nfe - 1.0");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(250, 250, 250));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel4.setBackground(new java.awt.Color(235, 235, 235));
        jPanel4.setFocusable(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(376, 50));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(40, 106, 172));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Manifestar NF-e");
        jPanel4.add(jLabel2, java.awt.BorderLayout.CENTER);

        jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
        jSeparator1.setPreferredSize(new java.awt.Dimension(10, 5));
        jPanel4.add(jSeparator1, java.awt.BorderLayout.SOUTH);

        jPanel1.add(jPanel4, java.awt.BorderLayout.NORTH);

        jTabbedPane1.setBackground(new java.awt.Color(235, 235, 235));
        jTabbedPane1.setFocusable(false);

        jPanel2.setBackground(new java.awt.Color(235, 235, 235));
        jPanel2.setFocusable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("CNPJ/CPF:");

        jtfCNPJCPF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfCNPJCPF.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jtfCNPJCPF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfCNPJCPFFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCNPJCPFFocusLost(evt);
            }
        });

        jtfChaveAcesso.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jtfChaveAcesso.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 153, 255)));
        jtfChaveAcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfChaveAcessoActionPerformed(evt);
            }
        });
        jtfChaveAcesso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfChaveAcessoKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Chave de Acesso:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Operação:");

        jcbOperacao.setEditable(true);
        jcbOperacao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbOperacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ciência da Operação", "Confirmação da Operação", "Desconhecimento da Operação", "Operação Não Realizada" }));
        jcbOperacao.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 153, 255)));
        jcbOperacao.setFocusable(false);
        jcbOperacao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbOperacaoItemStateChanged(evt);
            }
        });
        jcbOperacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbOperacaoActionPerformed(evt);
            }
        });
        jcbOperacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jcbOperacaoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfChaveAcesso)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfCNPJCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jcbOperacao, 0, 243, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCNPJCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbOperacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfChaveAcesso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Principal", jPanel2);

        jPanel5.setBackground(new java.awt.Color(235, 235, 235));
        jPanel5.setFocusable(false);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo Certificado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        tipoCertificado.add(jrbA3);
        jrbA3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jrbA3.setText("A3 (Cartão/Token)");
        jrbA3.setToolTipText("");
        jrbA3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrbA3.setFocusPainted(false);
        jrbA3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_round_20px.png"))); // NOI18N
        jrbA3.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_checked_radio_button_20px.png"))); // NOI18N
        jrbA3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_checked_radio_button_20px.png"))); // NOI18N
        jrbA3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbA3ActionPerformed(evt);
            }
        });

        tipoCertificado.add(jrbA1);
        jrbA1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jrbA1.setText("A1 (.pfx)");
        jrbA1.setToolTipText("Utilizado repositório do Windows");
        jrbA1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jrbA1.setFocusPainted(false);
        jrbA1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_round_20px.png"))); // NOI18N
        jrbA1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_checked_radio_button_20px.png"))); // NOI18N
        jrbA1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_checked_radio_button_20px.png"))); // NOI18N
        jrbA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbA1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbA1)
                .addGap(10, 10, 10)
                .addComponent(jrbA3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbA1)
                    .addComponent(jrbA3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Senha Certificado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N

        jtfSenha.setToolTipText("Senha do certificado somente para A3");
        jtfSenha.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 255)));
        jtfSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfSenhaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfSenhaFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfSenha)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfSenha)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo Certificado A3", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        jcbTipoCertificadoA3.setEditable(true);
        jcbTipoCertificadoA3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTipoCertificadoA3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LEITOR_SCR3310", "TOKEN_ALADDIN", "LEITOR_GEMPC_PERTO", "OBERTHUR", "BANRISUL" }));
        jcbTipoCertificadoA3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 153, 255)));
        jcbTipoCertificadoA3.setFocusable(false);
        jcbTipoCertificadoA3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbTipoCertificadoA3ItemStateChanged(evt);
            }
        });
        jcbTipoCertificadoA3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbTipoCertificadoA3ActionPerformed(evt);
            }
        });
        jcbTipoCertificadoA3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jcbTipoCertificadoA3KeyTyped(evt);
            }
        });
        jPanel8.add(jcbTipoCertificadoA3);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estado do Emitente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(153, 153, 153))); // NOI18N
        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        jcbUFEmitente.setEditable(true);
        jcbUFEmitente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbUFEmitente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AM", "AP", "BA", "CE", "DF", "ES", "GO", "MA", "MG", "MS", "MT", "PA", "PB", "PE", "PI", "PR", "RJ", "RN", "RO", "RR", "RS", "SC", "SE", "SP", "TO" }));
        jcbUFEmitente.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 153, 255)));
        jcbUFEmitente.setFocusable(false);
        jcbUFEmitente.setPreferredSize(new java.awt.Dimension(50, 21));
        jcbUFEmitente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbUFEmitenteItemStateChanged(evt);
            }
        });
        jcbUFEmitente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbUFEmitenteActionPerformed(evt);
            }
        });
        jcbUFEmitente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jcbUFEmitenteKeyTyped(evt);
            }
        });
        jPanel9.add(jcbUFEmitente);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_validation_40px.png"))); // NOI18N
        jButton1.setToolTipText("Testar certificado digital");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(25, 25, 25))))
        );

        jTabbedPane1.addTab("Certificado", jPanel5);

        jPanel1.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        jPanel3.setPreferredSize(new java.awt.Dimension(400, 45));
        java.awt.FlowLayout flowLayout1 = new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 80, 5);
        flowLayout1.setAlignOnBaseline(true);
        jPanel3.setLayout(flowLayout1);

        jbFecharSistema.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jbFecharSistema.setForeground(new java.awt.Color(255, 102, 102));
        jbFecharSistema.setText("Fechar (Esc)");
        jbFecharSistema.setBorderPainted(false);
        jbFecharSistema.setContentAreaFilled(false);
        jbFecharSistema.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbFecharSistema.setMaximumSize(new java.awt.Dimension(75, 35));
        jbFecharSistema.setMinimumSize(new java.awt.Dimension(75, 35));
        jbFecharSistema.setPreferredSize(new java.awt.Dimension(120, 35));
        jbFecharSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFecharSistemaActionPerformed(evt);
            }
        });
        jPanel3.add(jbFecharSistema);

        jbEnviar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jbEnviar.setForeground(new java.awt.Color(114, 157, 224));
        jbEnviar.setText("Enviar (F12)");
        jbEnviar.setBorderPainted(false);
        jbEnviar.setContentAreaFilled(false);
        jbEnviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbEnviar.setMaximumSize(new java.awt.Dimension(75, 35));
        jbEnviar.setMinimumSize(new java.awt.Dimension(75, 35));
        jbEnviar.setPreferredSize(new java.awt.Dimension(120, 35));
        jbEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEnviarActionPerformed(evt);
            }
        });
        jPanel3.add(jbEnviar);

        jPanel1.add(jPanel3, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtfChaveAcessoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfChaveAcessoKeyTyped
        String caracteres = "0987654321";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfChaveAcessoKeyTyped

    private void jtfCNPJCPFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCNPJCPFFocusGained
        SwingUtilities.invokeLater(() -> {
            jtfCNPJCPF.selectAll();
        });

    }//GEN-LAST:event_jtfCNPJCPFFocusGained

    private void jcbOperacaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbOperacaoKeyTyped
        String caracteres = "";
        if (!caracteres.contains(evt.getKeyChar() + "")) {
            evt.consume();
        }
    }//GEN-LAST:event_jcbOperacaoKeyTyped

    private void jcbOperacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbOperacaoActionPerformed

    }//GEN-LAST:event_jcbOperacaoActionPerformed

    private void jcbOperacaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbOperacaoItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            new Properties().setProp("manifestaNfe.operacao", String.valueOf(jcbOperacao.getSelectedIndex()));
        }
    }//GEN-LAST:event_jcbOperacaoItemStateChanged

    private void jtfCNPJCPFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCNPJCPFFocusLost
        jtfCNPJCPF.setText(Tools.formatarCNPJ(jtfCNPJCPF.getText()));
        new Properties().setProp("manifestaNfe.cnpjfcpf", String.valueOf(jcbOperacao.getSelectedIndex()));
    }//GEN-LAST:event_jtfCNPJCPFFocusLost

    private void jcbTipoCertificadoA3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbTipoCertificadoA3ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            new Properties().setProp("manifestaNfe.tipoCertificadoA3", String.valueOf(jcbTipoCertificadoA3.getSelectedIndex()));
        }
    }//GEN-LAST:event_jcbTipoCertificadoA3ItemStateChanged

    private void jcbTipoCertificadoA3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbTipoCertificadoA3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTipoCertificadoA3ActionPerformed

    private void jcbTipoCertificadoA3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbTipoCertificadoA3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTipoCertificadoA3KeyTyped

    private void jcbUFEmitenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbUFEmitenteItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            new Properties().setProp("manifestaNfe.estadoEmitente", String.valueOf(jcbUFEmitente.getSelectedIndex()));
        }
    }//GEN-LAST:event_jcbUFEmitenteItemStateChanged

    private void jcbUFEmitenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbUFEmitenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbUFEmitenteActionPerformed

    private void jcbUFEmitenteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbUFEmitenteKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbUFEmitenteKeyTyped

    private void jbFecharSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFecharSistemaActionPerformed
        finalizarSistema();
    }//GEN-LAST:event_jbFecharSistemaActionPerformed

    private void jbEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEnviarActionPerformed
        manifestaEnvio();
    }//GEN-LAST:event_jbEnviarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        finalizarSistema();
    }//GEN-LAST:event_formWindowClosing

    private void jtfSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSenhaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfSenhaFocusGained

    private void jtfSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSenhaFocusLost
        new Properties().setProp("manifestaNfe.senhaCertificado", jtfSenha.getText());
    }//GEN-LAST:event_jtfSenhaFocusLost

    private void jtfChaveAcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfChaveAcessoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfChaveAcessoActionPerformed

    private void jrbA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbA1ActionPerformed
       new Properties().setProp("manifestaNfe.tipoCertificado", "A1");
    }//GEN-LAST:event_jrbA1ActionPerformed

    private void jrbA3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbA3ActionPerformed
        new Properties().setProp("manifestaNfe.tipoCertificado", "A3");
    }//GEN-LAST:event_jrbA3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Thread(() -> {
            StatusProgress progress = new StatusProgress(this, false);
            progress.jlStatusText.setText("Consultando situação do certificado, aguarde...");
            progress.setVisible(true);
            CertificadoConfig.getStatus(progress);
        }).start();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbEnviar;
    private javax.swing.JButton jbFecharSistema;
    public static javax.swing.JComboBox<String> jcbOperacao;
    public static javax.swing.JComboBox<String> jcbTipoCertificadoA3;
    public static javax.swing.JComboBox<String> jcbUFEmitente;
    public static javax.swing.JRadioButton jrbA1;
    public static javax.swing.JRadioButton jrbA3;
    public static javax.swing.JTextField jtfCNPJCPF;
    public static javax.swing.JTextField jtfChaveAcesso;
    public static javax.swing.JTextField jtfSenha;
    private javax.swing.ButtonGroup tipoCertificado;
    // End of variables declaration//GEN-END:variables

    private void finalizarSistema() {
        int finalizar = FinalizarSistema.open(this).get();
        if (finalizar == FinalizarSistema.SAIR) {
            System.exit(0);
        }
    }

    private void manifestaEnvio() {
        String chaveAcesso = jtfChaveAcesso.getText();
        String cnpjCpf = jtfChaveAcesso.getText().replaceAll("\\D", "");
        if (StringUtils.isNotBlank(chaveAcesso)
                || StringUtils.isNotBlank(cnpjCpf)) {
            new Thread(() -> {
                StatusProgress progress = new StatusProgress(this, false);

                Evento manifesta = new Evento();
                manifesta.setChave(chaveAcesso);
                manifesta.setCnpj(cnpjCpf);
                manifesta.setDataEvento(LocalDateTime.now());

                switch (jcbOperacao.getSelectedIndex()) {
                    case 0:
                        manifesta.setTipoManifestacao(ManifestacaoEnum.CIENCIA_DA_OPERACAO);
                        break;
                    case 1:
                        manifesta.setTipoManifestacao(ManifestacaoEnum.CONFIRMACAO_DA_OPERACAO);
                        break;
                    case 2:
                        manifesta.setTipoManifestacao(ManifestacaoEnum.DESCONHECIMENTO_DA_OPERACAO);
                        break;
                    case 3:
                        manifesta.setTipoManifestacao(ManifestacaoEnum.OPERACAO_NAO_REALIZADA);
                        break;
                    default:
                        manifesta.setTipoManifestacao(ManifestacaoEnum.CIENCIA_DA_OPERACAO);
                        break;
                }

                if (manifesta.getTipoManifestacao() == ManifestacaoEnum.DESCONHECIMENTO_DA_OPERACAO
                        || manifesta.getTipoManifestacao() == ManifestacaoEnum.OPERACAO_NAO_REALIZADA) {
                    JLabel jLabel = new JLabel("Digite o motivo do evento " + manifesta.getTipoManifestacao().getDescricao() + ":");
                    JTextField jtfValor = new JTextField();
                    jtfValor.requestFocus();
                    Object[] ob = {jLabel, jtfValor};
                    int confirma = JOptionPane.showConfirmDialog(null, ob, "Atenção", JOptionPane.OK_CANCEL_OPTION);
                    if (confirma == JOptionPane.OK_OPTION
                            && StringUtils.isNotBlank(jtfValor.getText())) {
                        manifesta.setMotivo(jtfValor.getText());
                    }
                }

                manifestarNfeController.manifesta(manifesta, progress);

            }).start();
        }

    }
    
    public static void main(String[] args) throws Exception {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (info.getName().equals("Windows")) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao abrir sistema, motivo:\n" + ex.getMessage(), "Erro ao incializar", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }

        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });

    }

}
